public class Main {
    /*
    Inheritance (наследование)
    Наследование - важное свойство ООП, позволяющее классу использовать методы и переменные другого класса.
    В результате в классе-наследнике появляется возможность указывать только его уникальные свойства , а общие
    брать из класса, который он наследует.
    Наследование позволяет переиспользовать код
    Класс, от которого происходит наследование называется родительским классом, базовым классом или суперклассом
    Класс, который наследует называется дочерним классом или подклассом

    Обобщение и специализация
    Обобщение ( generalisation) - процесс определения общих свойств различных классов
    Специализация - создание подклассов на основании  тех методов и переменных, которые свойственны только данному
    классу

    class B -  класс
    class A extends B
     */
    public static void main(String[] args) {
        JavaTeacher javaTeacher = new JavaTeacher();
        System.out.println("Our java teacher");
        System.out.println(javaTeacher.profession);
        System.out.println(javaTeacher.college);
        System.out.println(javaTeacher.mainSubject);

        javaTeacher.work();
       // javaTeacher.

        // конструкторы и наследование
        // При создании обьекта дочернего класса вызываются конструкторы сначала
        // родительского и затем дочернего класса.
        // Вызрв конструктор родительского класса super()  должна стоять на
        // первом месте в конструкторе дочернего

        System.out.println("Constructors and Inheritance");
        SubClass subClass = new SubClass(" the Best");
        SubClass subClass1 = new SubClass(" the Best",10);
    }

    /*
    Типы наследования:

    1.Одиночное наследование
    class B extends A

    2. Многоуровневое наледование

        class B extends A
        class C extends B

     3. иерархическое наследование
      - когда несколько классов наследуют один и тот же класс

      4. гибридное наследование - комбинация нескольких типов наследования

      Класс не может наследовать больше чем одному классу.

      класс-наследник может наследовать только те переменные и методы родительского класса,
      которые имеют модификаторы public  или protected.
      Модификатор protected  означает что переменная или метод доступны в том же пакете и подклассах
      родительского класса

     */


}
