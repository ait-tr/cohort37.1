public class Main {

    // Интерфейсы в Джава
    /*
    public interface OurInterface {
      int someMethod1();
      int someMethod2();
      int someMethod3();
      ----
      int someMethodN();
    }

    Основные моменты:
    1. Интерфейс представляет собой полную абстракцию, так как его методы не имеют тела.
        Абстрактный класс представляет собой частичную абстракцию, так как у него могут быть как абстрактные так и
        конкретные методы
    2. Обьект интерфейса создать нельзя
    3. Для реализации классом интерфейса  используется ключевое слово implements
    4. При реализации методов интерфейса они должны быть обьявлены публичными
    5. Класс, реализующий интерфейс должен реализовать все его абстрактные методы или сам должен быть
            обьявлен абстрактным
    6. Все абстрактные методы интерфейса по умолчанию являются публичными
     */
    public static void main(String[] args) {
        Two two = new Two();
        two.getNext();
        System.out.println(two.value);

        Three three = new Three();

        Serial two1 = new Two();
        Serial three1 = new Three();

      //  Serial serial = new Serial(); обьект интерфейса создать нельзя

        Car car = new Car();
       // car.
        Movable carM = new Car();
      //  carM.
        Breakable carB = new Car();
       // carB.

        /*
        Разница между наследованием ,абстрактными классами и интерфейсами
        1. Абстрактный класс может иметь абстрактные и конкретные методы.
            Интерфейс до 8 джавы мог иметь только абстрактные методы
        2.  Дочерний класс может наследоваться только от одного родительского класса. При этом
                класс может реализовывать несколько интерфейсов
        3. При наследовании наследуемые классы как правило являются родственными, принадлежащими к одной группе.
           В случае с интерфейсами самые разные классы могут реализовывать один интерфейс , т.е. иметь некий общий признак,
           например уметь летать ( Самолет, муха, карлсон)

         */

    }
}
